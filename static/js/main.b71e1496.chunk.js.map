{"version":3,"sources":["reducer.js","Context.js","UserInput.js","Visualization.js","App.js","index.js"],"names":["reducer","state","action","type","payload","html","css","isVisualizationOn","visualizationStatus","delay","Math","round","err","alert","AppContext","React","createContext","initialState","AppProvider","children","useReducer","dispatch","codeInterval","useRef","outputInterval","indexRef","endingBodyTag","search","code","slice","useEffect","codeContainer","document","getElementById","codeOutput","current","setInterval","append","scrollTop","scrollHeight","length","clearInterval","writer","codeVal","doc","contentWindow","open","write","close","updater","value","Provider","handleChange","string","id","startVisualization","playPauseToggle","changeSpeed","fastForward","useGlobalContext","useContext","UserInput","className","onChange","e","target","placeholder","onClick","Visualization","readOnly","closest","href","rel","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b71e1496.chunk.js","sourcesContent":["const reducer = (state, action) => {\r\n  try {\r\n    if (action.type === \"UPDATE_STATE\") {\r\n      if (action.payload[1] === \"html-textarea\") {\r\n        return { ...state, html: action.payload[0] };\r\n      }\r\n      ///\r\n      if (action.payload[1] === \"css-textarea\") {\r\n        return { ...state, css: action.payload[0] };\r\n      }\r\n    }\r\n    ///\r\n    if (action.type === \"START_VISUALIZING\") {\r\n      // console.log(\"start visualizing\");\r\n\r\n      return { ...state, isVisualizationOn: !state.isVisualizationOn };\r\n    }\r\n    ///\r\n    if (action.type === \"CHANGE_VISUALIZATION_STATUS\") {\r\n      return {\r\n        ...state,\r\n        visualizationStatus:\r\n          state.visualizationStatus === \"playing\" ? \"paused\" : \"playing\",\r\n      };\r\n    }\r\n    ///\r\n    if (action.type === \"CHANGE_SPEED\") {\r\n      if (action.payload === \"decrease-speed\") {\r\n        return {\r\n          ...state,\r\n          delay:\r\n            state.delay > 10\r\n              ? Math.round(state.delay / 2)\r\n              : state.delay > 3\r\n              ? state.delay - 1\r\n              : state.delay,\r\n        };\r\n      }\r\n      if (action.payload === \"increase-speed\") {\r\n        return {\r\n          ...state,\r\n          delay:\r\n            state.delay < 50\r\n              ? state.delay * 3\r\n              : state.delay < 100\r\n              ? state.delay * 2\r\n              : state.delay < 300\r\n              ? state.delay * 1.5\r\n              : state.delay < 500\r\n              ? state.delay * 1.5\r\n              : state.delay * 1.3,\r\n        };\r\n      }\r\n    }\r\n\r\n    ///\r\n    return { ...state };\r\n  } catch (err) {\r\n    alert(\"Sorry, I couldn't process it. Check your HTML or CSS\");\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { useContext, useEffect, useReducer, useRef } from \"react\";\r\nimport reducer from \"./reducer\";\r\nimport sanitizeHtml from \"sanitize-html\";\r\n\r\nconst AppContext = React.createContext();\r\n//Provider, Consumer\r\n\r\nconst initialState = {\r\n  html: \"\",\r\n  css: \"\",\r\n  isVisualizationOn: false,\r\n  delay: 100,\r\n  visualizationStatus: \"playing\",\r\n};\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  //destructure state for easy reference.\r\n  const { isVisualizationOn, delay, visualizationStatus } = state;\r\n\r\n  ////DECLARATIONS\r\n  let codeInterval = useRef(null);\r\n  let outputInterval = useRef(null);\r\n  let indexRef = useRef(0);\r\n  let html = `${state.html}`;\r\n\r\n  const endingBodyTag = html.search(\"</body>\");\r\n\r\n  let css = `\\n<style>\\n${state.css}\\n</style>\\n`;\r\n  let code = css\r\n    ? html.slice(0, endingBodyTag) + css + html.slice(endingBodyTag)\r\n    : html;\r\n  ///\r\n\r\n  const writer = (code, codeContainer) => {\r\n    if (visualizationStatus === \"playing\") {\r\n      codeContainer.append(code[indexRef.current]);\r\n      codeContainer.scrollTop = codeContainer.scrollHeight;\r\n      ++indexRef.current;\r\n      if (indexRef.current === code.length) {\r\n        indexRef.current = 0;\r\n        clearInterval(codeInterval.current);\r\n        codeInterval.current = null;\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  const updater = (codeVal, codeOutput) => {\r\n    let doc = codeOutput.contentWindow.document;\r\n    doc.open();\r\n    doc.write(codeVal);\r\n    doc.close();\r\n\r\n    // let availableWidth = codeOutput.offsetWidth;\r\n\r\n    // let actualBody = doc.querySelector(\"body\");\r\n\r\n    // let actualWidth = actualBody.scrollWidth;\r\n\r\n    // if (actualWidth > availableWidth) {\r\n    //   let scaleDownRatio = availableWidth / actualWidth;\r\n    //   let roundedRatio = Math.round(scaleDownRatio * 10) / 10;\r\n    //   console.log(roundedRatio);\r\n\r\n    //   actualBody.style.transform = `scale(${roundedRatio - 0.3})`;\r\n    //}\r\n    if (codeInterval.current === null)\r\n      return clearInterval(outputInterval.current);\r\n  };\r\n\r\n  useEffect(() => {\r\n    ///\r\n    if (isVisualizationOn) {\r\n      ///\r\n      ///\r\n      let codeContainer = document.getElementById(\"code-container\");\r\n      let codeOutput = document.getElementById(\"code-output\");\r\n      // console.log(codeOutput.offsetWidth);\r\n\r\n      ///\r\n\r\n      ////\r\n      if (visualizationStatus === \"playing\") {\r\n        codeInterval.current = setInterval(() => {\r\n          writer(code, codeContainer);\r\n        }, delay);\r\n\r\n        outputInterval.current = setInterval(() => {\r\n          updater(codeContainer.value, codeOutput);\r\n        }, delay);\r\n      }\r\n      ///\r\n      return () => {\r\n        clearInterval(codeInterval.current);\r\n        clearInterval(outputInterval.current);\r\n      };\r\n    }\r\n  }, [isVisualizationOn, visualizationStatus, delay]);\r\n\r\n  ////\r\n  const handleChange = (string, id) => {\r\n    dispatch({ type: \"UPDATE_STATE\", payload: [string, id] });\r\n  };\r\n\r\n  ////\r\n  const startVisualization = () => {\r\n    dispatch({ type: \"START_VISUALIZING\" });\r\n  };\r\n\r\n  ////\r\n  const playPauseToggle = () => {\r\n    dispatch({ type: \"CHANGE_VISUALIZATION_STATUS\" });\r\n  };\r\n\r\n  ///\r\n  const changeSpeed = (type) => {\r\n    dispatch({ type: \"CHANGE_SPEED\", payload: type });\r\n  };\r\n\r\n  const fastForward = () => {\r\n    // console.log(indexRef.current);\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        ...state,\r\n        handleChange,\r\n        startVisualization,\r\n        playPauseToggle,\r\n        changeSpeed,\r\n        fastForward,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\n\r\n// let elementWidth = iframe.querySelector(\"body\").scrollWidth;\r\n// let containerWidth =\r\n//   document.getElementById(\"iframe-container\").scrollWidth;\r\n// console.log(elementWidth, containerWidth);\r\n\r\n// let scaleDownX =\r\n//   document.getElementById(\"iframe-container\").scrollWidth /\r\n//   iframe.querySelector(\"body\").scrollWidth;\r\n// console.log(scaleDownX);\r\n\r\n///\r\n// let visualizerDoc = iframe.documentElement;\r\n// console.log(visualizerDoc.offsetWidth, visualizerDoc.scrollWidth);\r\n\r\n//condition when content overflows the container\r\n// in such situation, this scales the content down to fit the container\r\n// don't want it to happen at every render. rather when i %\r\n\r\n// if (indexRef.current % 20 === 0) {\r\n//   if (iframe.body.offsetWidth < iframe.body.scrollWidth) {\r\n//     iframe.html.style.transform = `scale(${\r\n//       iframe.html.offsetWidth / iframe.html.scrollWidth\r\n//     }, 0)`;\r\n//     console.log(iframe.body.offsetWidth, iframe.body.scrollWidth);\r\n//   }\r\n// }\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"./Context\";\r\n\r\nconst UserInput = () => {\r\n  const { handleChange, startVisualization } = useGlobalContext();\r\n  return (\r\n    <div id=\"userinput-container\">\r\n      <div id=\"userinput\">\r\n        {/* html input */}\r\n        <div id=\"html-input-component\" className=\"input-component\">\r\n          <textarea\r\n            id=\"html-textarea\"\r\n            className=\"html-textarea textarea\"\r\n            onChange={(e) => handleChange(e.target.value, e.target.id)}\r\n            placeholder=\"Write your HTML here. Make Sure it's in correct format.\"\r\n          ></textarea>\r\n        </div>\r\n        {/* css input */}\r\n        <div id=\"css-input-component\" className=\"input-component\">\r\n          <textarea\r\n            id=\"css-textarea\"\r\n            className=\"css-textarea textarea\"\r\n            onChange={(e) => handleChange(e.target.value, e.target.id)}\r\n            placeholder=\"Write your CSS here. Make Sure it's in correct format.\"\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n      <button id=\"submit-btn\" onClick={startVisualization}>\r\n        {\" \"}\r\n        Start Visualization{\" \"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserInput;\r\n","import React from \"react\";\r\n\r\nimport { FaPlay, FaPause, FaArrowUp, FaArrowDown } from \"react-icons/fa\";\r\nimport { useGlobalContext } from \"./Context\";\r\n// import Button from \"react-bootstrap/Button\";\r\nimport { FaTwitter, FaGithub } from \"react-icons/fa\";\r\n\r\nconst Visualization = () => {\r\n  const {\r\n    \r\n    visualizationStatus,\r\n    playPauseToggle,\r\n    changeSpeed,\r\n    \r\n  } = useGlobalContext();\r\n  return (\r\n    <div id=\"visualization\">\r\n      <div id=\"visualization-code-control-container\">\r\n        <textarea id=\"code-container\" readOnly></textarea>\r\n        <div id=\"visualization-controls\">\r\n          <div>\r\n            <button\r\n              id=\"increase-speed\"\r\n              className=\"button speed-btn\"\r\n              onClick={(e) => changeSpeed(e.target.id)}\r\n            >\r\n              {\" \"}\r\n              <FaArrowDown\r\n                onClick={(e) => changeSpeed(e.target.closest(\"button\").id)}\r\n              />\r\n            </button>\r\n            Speed\r\n            <button\r\n              id=\"decrease-speed\"\r\n              className=\"button speed-btn\"\r\n              onClick={(e) => changeSpeed(e.target.id)}\r\n            >\r\n              <FaArrowUp\r\n                onClick={(e) => changeSpeed(e.target.closest(\"button\").id)}\r\n              />\r\n            </button>\r\n          </div>\r\n          <button id=\"visualization-pause\" onClick={playPauseToggle}>\r\n            {visualizationStatus === \"playing\" ? <FaPause /> : <FaPlay />}\r\n          </button>\r\n          {/* Fast Forward button will be added later */}\r\n          {/* <button\r\n            id=\"visualization-forward\"\r\n            className=\"button\"\r\n            onClick={fastForward}\r\n          >\r\n            {\" \"}\r\n            Fast Forward\r\n          </button>*/}\r\n        </div>\r\n        <div className=\"contact\">\r\n          <a\r\n            href=\"https://github.com/croy47\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer noopener\"\r\n          >\r\n            <FaGithub />\r\n          </a>\r\n          <a\r\n            href=\"https://twitter.com/chandan_py_js\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer noopener\"\r\n          >\r\n            <FaTwitter />\r\n          </a>\r\n          <p>Designed By Chandan Roy</p>\r\n        </div>\r\n\r\n        <span></span>\r\n      </div>\r\n      {/* code output */}\r\n      <div id=\"iframe-container\">\r\n        <iframe id=\"code-output\">{/* <div id=\"code-output\"></div> */}</iframe>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Visualization;\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"./Context\";\r\n\r\nimport UserInput from \"./UserInput\";\r\nimport Visualization from \"./Visualization\";\r\nexport default function App() {\r\n  const { isVisualizationOn } = useGlobalContext();\r\n\r\n  if (!isVisualizationOn)\r\n    return (\r\n      <div className=\"app\">\r\n        <UserInput />\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {/* <UserInput /> */}\r\n      <Visualization />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { AppProvider } from \"./Context\";\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}